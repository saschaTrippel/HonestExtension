// Use 'webRequest' permission to trach browsing history

/**
 * Save information about a web request.
 *
 * @param info Information generated by webRequest.onBeforRequest event
 */
async function saveWebRequestHistory(info) {
	let webRequestHistory = [];
	const storage = await browser.storage.local.get();
	if (Object.keys(storage).includes("webRequestHistory")) {
		webRequestHistory = storage.webRequestHistory;
	}

	webRequestHistory.push({
		url: info.url,
		date: info.timeStamp
	});

	browser.storage.local.set({webRequestHistory});
}


let activeWebRequest = false;
/**
 * Activate webRequest tracker if 'webRequest' permission is given.
 */
async function activateWebRequest() {
	if (await hasPermissions(["webRequest"])) {
		const filter =  {urls: ["<all_urls>"], types: ["main_frame"]};
		browser.webRequest.onBeforeRequest.addListener(saveWebRequestHistory, filter);
		activeWebRequest = true;
		console.log("Activated webRequest history tracker");
	}
}

/**
 * Deactivate webRequest tracker if it is active.
 */
function deactivateWebRequest() {
	if (activeWebRequest) {
		browser.webRequest.onBeforeRequest.removeListener(saveWebRequestHistory);
		activeWebRequest = false;
		console.log("Deactivated webRequest history tracker");
	}
}
