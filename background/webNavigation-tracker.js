// Use 'webNavigation' permission to trach browsing history

/**
 * Save information about a new navigation event.
 *
 * @param info Information generated by webNavigation.onCompleted event
 */
async function saveWebNavigationHistory(info) {
	if (info.url != "about:blank") {
		const storage = await browser.storage.local.get();
		let webNavigationHistory = [];
		if (Object.keys(storage).includes("webNavigationHistory")) {
			webNavigationHistory = storage.webNavigationHistory;
		}

		webNavigationHistory.push({
			url: info.url,
			date: info.timeStamp
		});

		browser.storage.local.set({webNavigationHistory});
	}
}

let activeWebNavigation = false;
/**
 * Activate webNavigation tracker if 'webNavigation' permission is given.
 */
async function activateWebNavigation() {
	if (await hasPermissions(["webNavigation"])) {
		browser.webNavigation.onCompleted.addListener(saveWebNavigationHistory);
		activeWebNavigation = true;
		console.log("Activated webNavigation tracker");
	}
}

/**
 * Deactivate webNavigation tracker if it is active.
 */
function deactivateWebNavigation() {
	if (activeWebNavigation) {
		browser.webNavigation.onCompleted.removeListener(saveWebNavigationHistory);
		activeWebNavigation = false;
		console.log("Deactivated webNavigation tracker");
	}
}
